{"ast":null,"code":"var baseUnset = require('./_baseUnset'),\n    isIndex = require('./_isIndex');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\r\n * The base implementation of `_.pullAt` without support for individual\r\n * indexes or capturing the removed elements.\r\n *\r\n * @private\r\n * @param {Array} array The array to modify.\r\n * @param {number[]} indexes The indexes of elements to remove.\r\n * @returns {Array} Returns `array`.\r\n */\n\nfunction basePullAt(array, indexes) {\n  var length = array ? indexes.length : 0,\n      lastIndex = length - 1;\n\n  while (length--) {\n    var index = indexes[length];\n\n    if (length == lastIndex || index !== previous) {\n      var previous = index;\n\n      if (isIndex(index)) {\n        splice.call(array, index, 1);\n      } else {\n        baseUnset(array, index);\n      }\n    }\n  }\n\n  return array;\n}\n\nmodule.exports = basePullAt;","map":{"version":3,"sources":["C:/ReactWorkspace/hotel-sys/hotel-sys/node_modules/lodash/_basePullAt.js"],"names":["baseUnset","require","isIndex","arrayProto","Array","prototype","splice","basePullAt","array","indexes","length","lastIndex","index","previous","call","module","exports"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAvB;AAAA,IACIC,OAAO,GAAGD,OAAO,CAAC,YAAD,CADrB;AAGA;;;AACA,IAAIE,UAAU,GAAGC,KAAK,CAACC,SAAvB;AAEA;;AACA,IAAIC,MAAM,GAAGH,UAAU,CAACG,MAAxB;AAEA;;;;;;;;;;AASA,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,OAA3B,EAAoC;AAClC,MAAIC,MAAM,GAAGF,KAAK,GAAGC,OAAO,CAACC,MAAX,GAAoB,CAAtC;AAAA,MACIC,SAAS,GAAGD,MAAM,GAAG,CADzB;;AAGA,SAAOA,MAAM,EAAb,EAAiB;AACf,QAAIE,KAAK,GAAGH,OAAO,CAACC,MAAD,CAAnB;;AACA,QAAIA,MAAM,IAAIC,SAAV,IAAuBC,KAAK,KAAKC,QAArC,EAA+C;AAC7C,UAAIA,QAAQ,GAAGD,KAAf;;AACA,UAAIV,OAAO,CAACU,KAAD,CAAX,EAAoB;AAClBN,QAAAA,MAAM,CAACQ,IAAP,CAAYN,KAAZ,EAAmBI,KAAnB,EAA0B,CAA1B;AACD,OAFD,MAEO;AACLZ,QAAAA,SAAS,CAACQ,KAAD,EAAQI,KAAR,CAAT;AACD;AACF;AACF;;AACD,SAAOJ,KAAP;AACD;;AAEDO,MAAM,CAACC,OAAP,GAAiBT,UAAjB","sourcesContent":["var baseUnset = require('./_baseUnset'),\r\n    isIndex = require('./_isIndex');\r\n\r\n/** Used for built-in method references. */\r\nvar arrayProto = Array.prototype;\r\n\r\n/** Built-in value references. */\r\nvar splice = arrayProto.splice;\r\n\r\n/**\r\n * The base implementation of `_.pullAt` without support for individual\r\n * indexes or capturing the removed elements.\r\n *\r\n * @private\r\n * @param {Array} array The array to modify.\r\n * @param {number[]} indexes The indexes of elements to remove.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction basePullAt(array, indexes) {\r\n  var length = array ? indexes.length : 0,\r\n      lastIndex = length - 1;\r\n\r\n  while (length--) {\r\n    var index = indexes[length];\r\n    if (length == lastIndex || index !== previous) {\r\n      var previous = index;\r\n      if (isIndex(index)) {\r\n        splice.call(array, index, 1);\r\n      } else {\r\n        baseUnset(array, index);\r\n      }\r\n    }\r\n  }\r\n  return array;\r\n}\r\n\r\nmodule.exports = basePullAt;\r\n"]},"metadata":{},"sourceType":"script"}