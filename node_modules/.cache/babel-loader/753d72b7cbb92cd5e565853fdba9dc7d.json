{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactWorkspace\\\\hotel-sys\\\\src\\\\components\\\\frontOffice\\\\rooms\\\\MasterDetail.js\";\nimport React, { useState } from 'react';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { useSelector, connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Editable from './Editable';\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    position: \"relative\",\n    zIndex: 0,\n    height: \"460px\"\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    position: \"relative\",\n    background: \"white\"\n  },\n  // necessary for content to be below app bar\n  toolbar: {},\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3)\n  }\n}));\n\nfunction PermanentDrawerLeft() {\n  const {\n    useState\n  } = React;\n  const classes = useStyles();\n  const [roomtype, setRoomType] = useState(\"\");\n  const roomtypes = useSelector(state => state.firestore.ordered.roomtype);\n  console.log(roomtypes);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"permanent\",\n    classes: {\n      paper: classes.drawerPaper\n    },\n    anchor: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, roomtypes ? roomtypes.map((room, index) => /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: room.id,\n    onClick: () => {\n      console.log(room.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MailIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 30\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: room.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 18\n    }\n  }, \"Loading\")), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, ['All mail', 'Trash', 'Spam'].map((text, index) => /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, index % 2 === 0 ? /*#__PURE__*/React.createElement(InboxIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 48\n    }\n  }) : /*#__PURE__*/React.createElement(MailIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 64\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Editable, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default compose(connect(null), firestoreConnect([{\n  collection: 'roomtype'\n}]))(PermanentDrawerLeft);","map":{"version":3,"sources":["D:/ReactWorkspace/hotel-sys/src/components/frontOffice/rooms/MasterDetail.js"],"names":["React","useState","firestoreConnect","useSelector","connect","compose","makeStyles","Drawer","CssBaseline","AppBar","Toolbar","List","Typography","Divider","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","Editable","drawerWidth","useStyles","theme","root","display","appBar","width","marginLeft","drawer","flexShrink","position","zIndex","height","drawerPaper","background","toolbar","content","flexGrow","backgroundColor","palette","default","padding","spacing","PermanentDrawerLeft","classes","roomtype","setRoomType","roomtypes","state","firestore","ordered","console","log","paper","map","room","index","id","text","collection"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { useSelector, connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Editable from './Editable';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    \r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    position: \"relative\",\r\n    zIndex:0,\r\n    height:\"460px\"\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    position: \"relative\",\r\n    background:\"white\"\r\n\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: {\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction PermanentDrawerLeft() {\r\n  const { useState } = React;\r\n  const classes = useStyles();\r\n\r\n  const [roomtype, setRoomType] = useState(\"\");\r\n  const roomtypes = useSelector(state => state.firestore.ordered.roomtype)\r\nconsole.log(roomtypes)\r\n  return (\r\n   <div style={{display:\"flex\"}}>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n        <Divider />\r\n        <List>\r\n          {roomtypes ? (roomtypes.map((room, index) => (\r\n            <ListItem button key={room.id} onClick={() => {console.log(room.id) }}>\r\n              <ListItemIcon>{<MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={room.id} />\r\n            </ListItem>\r\n          ))) : (<div>Loading</div>)}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text} >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n            <Editable/>\r\n      </div>\r\n      \r\n  );\r\n}\r\n\r\nexport default compose(connect(null),firestoreConnect([\r\n    {collection: 'roomtype'}\r\n  ]))(PermanentDrawerLeft)"]},"metadata":{},"sourceType":"module"}