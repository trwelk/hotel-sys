{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactWorkspace\\\\hotel-sys\\\\hotel-sys\\\\src\\\\components\\\\frontOffice\\\\reservation\\\\ReservationBoxView.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Paper from '@material-ui/core/Paper';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { useSelector, connect } from 'react-redux';\nimport { compose } from 'redux';\nimport ReservationCard from './utill/ReservationCard';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    height: 250,\n    width: 200\n  },\n  control: {\n    padding: theme.spacing(2)\n  }\n}));\n\nfunction ReservatonBoxView(props) {\n  const {\n    useState\n  } = React;\n  const reservations = useSelector(state => state.firestore.ordered.reservation);\n  const [spacing, setSpacing] = React.useState(2);\n  const [month, setMonth] = useState(7);\n  const classes = useStyles();\n\n  const handleChange = event => {\n    setSpacing(Number(event.target.value));\n  };\n\n  var box = [];\n\n  for (var i = 0; i < 31; ++i) {\n    box[i] = [];\n\n    for (var j = 0; j < 6; ++j) {\n      box[i][j] = i + j;\n    }\n  }\n\n  var getDaysArray = function (start, end) {\n    for (var arr = [], dt = new Date(start); dt <= end; dt.setDate(dt.getDate() + 1)) {\n      arr.push(new Date(dt));\n    }\n\n    return arr;\n  };\n\n  if (reservations != null) {\n    for (var reservation = 0; reservation < reservations.length; reservation++) {\n      for (var room = 0; room < 6; room++) {\n        const reservedDays = getDaysArray(reservations[reservation].startDay.toDate(), reservations[reservation].endDay.toDate());\n\n        if (room == reservations[reservation].roomNo) {\n          for (var dayOfBooking of reservedDays) {\n            console.log(dayOfBooking.getMonth(), month, \"ttttttttttttttttttttttttttttttttttttttttttttttttt\"); //add a if condition here to check if dayOfBooking.getMonth is = to the above selected month\n\n            if (dayOfBooking.getMonth() == month) box[dayOfBooking.getDate()][room] = reservations[reservation];\n          }\n        }\n      }\n    }\n\n    for (var a = 0; a < 31; a++) {\n      for (var b = 0; b < 6; b++) {\n        console.log(a, b, box[a][b]);\n      }\n    }\n  }\n\n  const rows = box.map((row, rIndex) => {\n    const paper = row.map((element, eIndex) => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        key: eIndex,\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, element.roomId ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, element.id) : /*#__PURE__*/React.createElement(ReservationCard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 16\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"space-around\",\n      key: rIndex,\n      spacing: 3,\n      style: {\n        background: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, rIndex), paper);\n  });\n\n  const handleMonthPick = e => {\n    console.log(new Date(e.target.value));\n    const mo = new Date(e.target.value);\n    const month = mo.getMonth();\n    setMonth(month);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.root,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"month\",\n    name: \"month\",\n    onChange: handleMonthPick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, rows));\n}\n\nexport default firestoreConnect([{\n  collection: 'reservation'\n}])(ReservatonBoxView);","map":{"version":3,"sources":["C:/ReactWorkspace/hotel-sys/hotel-sys/src/components/frontOffice/reservation/ReservationBoxView.js"],"names":["React","makeStyles","Grid","FormLabel","FormControlLabel","RadioGroup","Radio","Paper","firestoreConnect","useSelector","connect","compose","ReservationCard","useStyles","theme","root","flexGrow","paper","height","width","control","padding","spacing","ReservatonBoxView","props","useState","reservations","state","firestore","ordered","reservation","setSpacing","month","setMonth","classes","handleChange","event","Number","target","value","box","i","j","getDaysArray","start","end","arr","dt","Date","setDate","getDate","push","length","room","reservedDays","startDay","toDate","endDay","roomNo","dayOfBooking","console","log","getMonth","a","b","rows","map","row","rIndex","element","eIndex","roomId","id","background","handleMonthPick","e","mo","collection"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { useSelector, connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\nimport ReservationCard from './utill/ReservationCard'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 250,\r\n    width: 200,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction  ReservatonBoxView (props)  {\r\n \r\n  const { useState } = React;\r\n\r\n  const reservations = useSelector(state => state.firestore.ordered.reservation )\r\n  const [spacing, setSpacing] = React.useState(2);\r\n  const [month, setMonth] = useState(7);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (event) => {\r\n    setSpacing(Number(event.target.value));\r\n  };\r\n\r\n\r\n  var box = [ ];\r\n  for(var i = 0; i < 31; ++i) {\r\n    box[i] = [ ];\r\n      for(var j = 0; j < 6; ++j) {\r\n        box[i][j] = i+j; \r\n      }\r\n  }\r\n\r\n  var getDaysArray = function(start, end) {\r\n    for(var arr=[],dt=new Date(start); dt<=end; dt.setDate(dt.getDate()+1)){\r\n  \r\n      arr.push(new Date(dt));\r\n    }\r\n    return arr;\r\n  };\r\n\r\n\r\n\r\n  if(reservations != null){\r\n    for(var reservation = 0 ; reservation < reservations.length ; reservation++){\r\n      for(var room = 0 ; room < 6 ; room++){\r\n        const reservedDays = getDaysArray(reservations[reservation].startDay.toDate(),reservations[reservation].endDay.toDate());\r\n        if(room == reservations[reservation].roomNo ){\r\n          for(var dayOfBooking of reservedDays){\r\n            console.log(dayOfBooking.getMonth(),month,\"ttttttttttttttttttttttttttttttttttttttttttttttttt\")\r\n            //add a if condition here to check if dayOfBooking.getMonth is = to the above selected month\r\n            if(dayOfBooking.getMonth() == month)\r\n              box[dayOfBooking.getDate()][room]= reservations[reservation] \r\n\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for(var a = 0 ; a < 31 ; a++){\r\n      for(var b = 0 ; b < 6 ; b++){\r\n        console.log( a,b,box[a][b] );\r\n      }\r\n    }\r\n  }\r\n  \r\n  const rows = box.map((row,rIndex) => {\r\n    const paper = row.map((element,eIndex) => {\r\n      return(\r\n        <Grid key={eIndex} item>\r\n          {element.roomId ? (\r\n            <div>{element.id}</div>\r\n          ) : (<ReservationCard/>)}\r\n        </Grid>      \r\n      )})\r\n\r\n    return(\r\n\r\n      <Grid container justify=\"space-around\" key={rIndex} spacing={3}  style={{background:\"white\"}}>\r\n        <div >{rIndex}</div>\r\n        {paper}\r\n      </Grid>\r\n    )\r\n\r\n  })\r\n\r\n \r\n  const handleMonthPick = (e) => {\r\n    console.log(new Date(e.target.value));\r\n    const mo = new Date(e.target.value);\r\n    const month = mo.getMonth();\r\n    \r\n    setMonth(month);\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.root} spacing={1}>\r\n      <input type=\"month\" name=\"month\" onChange={handleMonthPick}/>\r\n\r\n      <Grid item xs={12}>\r\n        {rows}\r\n      </Grid>\r\n    </Grid>\r\n\r\n\r\n  \r\n  );\r\n}\r\n\r\nexport default firestoreConnect([\r\n  {collection: 'reservation'}\r\n]) (ReservatonBoxView)"]},"metadata":{},"sourceType":"module"}