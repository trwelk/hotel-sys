{"ast":null,"code":"var baseUnset = require('./_baseUnset');\n/**\r\n * Removes the property at `path` of `object`.\r\n *\r\n * **Note:** This method mutates `object`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Object\r\n * @param {Object} object The object to modify.\r\n * @param {Array|string} path The path of the property to unset.\r\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\r\n * @example\r\n *\r\n * var object = { 'a': [{ 'b': { 'c': 7 } }] };\r\n * _.unset(object, 'a[0].b.c');\r\n * // => true\r\n *\r\n * console.log(object);\r\n * // => { 'a': [{ 'b': {} }] };\r\n *\r\n * _.unset(object, ['a', '0', 'b', 'c']);\r\n * // => true\r\n *\r\n * console.log(object);\r\n * // => { 'a': [{ 'b': {} }] };\r\n */\n\n\nfunction unset(object, path) {\n  return object == null ? true : baseUnset(object, path);\n}\n\nmodule.exports = unset;","map":{"version":3,"sources":["C:/ReactWorkspace/hotel-sys/hotel-sys/node_modules/lodash/unset.js"],"names":["baseUnset","require","unset","object","path","module","exports"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAvB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,SAASC,KAAT,CAAeC,MAAf,EAAuBC,IAAvB,EAA6B;AAC3B,SAAOD,MAAM,IAAI,IAAV,GAAiB,IAAjB,GAAwBH,SAAS,CAACG,MAAD,EAASC,IAAT,CAAxC;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBJ,KAAjB","sourcesContent":["var baseUnset = require('./_baseUnset');\r\n\r\n/**\r\n * Removes the property at `path` of `object`.\r\n *\r\n * **Note:** This method mutates `object`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Object\r\n * @param {Object} object The object to modify.\r\n * @param {Array|string} path The path of the property to unset.\r\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\r\n * @example\r\n *\r\n * var object = { 'a': [{ 'b': { 'c': 7 } }] };\r\n * _.unset(object, 'a[0].b.c');\r\n * // => true\r\n *\r\n * console.log(object);\r\n * // => { 'a': [{ 'b': {} }] };\r\n *\r\n * _.unset(object, ['a', '0', 'b', 'c']);\r\n * // => true\r\n *\r\n * console.log(object);\r\n * // => { 'a': [{ 'b': {} }] };\r\n */\r\nfunction unset(object, path) {\r\n  return object == null ? true : baseUnset(object, path);\r\n}\r\n\r\nmodule.exports = unset;\r\n"]},"metadata":{},"sourceType":"script"}